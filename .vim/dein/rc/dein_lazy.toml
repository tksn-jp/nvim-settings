[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'othree/html5.vim'
on_ft = 'html'

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'css']
on_i = '1'
hook_source = '''
    let g:user_emmet_mode = 'i'
    let g:user_emmet_leader_key = '<C-E>'
    let g:use_emmet_complete_tag = 1
    let g:user_emmet_settings = {
        'variables': {
                'lang': "ja"
        },
        'indentation': '  '
    }
'''
# hook_post_source = '''
#     set tabstop&
#     set shiftwidth&
#     set softtabstop&
# '''

[[plugins]]
repo = 'Shougo/echodoc'
hook_post_source = '''
	let g:echodoc#enable_at_startup = 1
'''

[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = 'css'

[[plugins]]
repo = 'jelera/vim-javascript-syntax'
on_ft = 'javascript'

[[plugins]]
repo = 'carlitux/deoplete-ternjs'
on_ft = 'js'
hook_source = '''
" Set bin if you have many instalations
let g:deoplete#sources#ternjs#tern_bin = '/Users/shunsuke/.nodebrew/current/bin/tern'
let g:deoplete#sources#ternjs#timeout = 1

" Whether to include the types of the completions in the result data. Default: 0
let g:deoplete#sources#ternjs#types = 1

" Whether to include the distance (in scopes for variables, in prototypes for
" properties) between the completions and the origin position in the result
" data. Default: 0
let g:deoplete#sources#ternjs#depths = 1

" Whether to include documentation strings (if found) in the result data.
" Default: 0
let g:deoplete#sources#ternjs#docs = 1

" When on, only completions that match the current word at the given point will
" be returned. Turn this off to get all results, so that you can filter on the
" client side. Default: 1
let g:deoplete#sources#ternjs#filter = 0

" Whether to use a case-insensitive compare between the current word and
" potential completions. Default 0
let g:deoplete#sources#ternjs#case_insensitive = 1

" When completing a property and no completions are found, Tern will use some
" heuristics to try and return some properties anyway. Set this to 0 to
" turn that off. Default: 1
let g:deoplete#sources#ternjs#guess = 0

" Determines whether the result set will be sorted. Default: 1
let g:deoplete#sources#ternjs#sort = 0

" When disabled, only the text before the given position is considered part of
" the word. When enabled (the default), the whole variable name that the cursor
" is on will be included. Default: 1
let g:deoplete#sources#ternjs#expand_word_forward = 0

" Whether to ignore the properties of Object.prototype unless they have been
" spelled out by at least two characters. Default: 1
let g:deoplete#sources#ternjs#omit_object_prototype = 0

" Whether to include JavaScript keywords when completing something that is not
" a property. Default: 0
let g:deoplete#sources#ternjs#include_keywords = 1

" If completions should be returned when inside a literal. Default: 1
let g:deoplete#sources#ternjs#in_literal = 0


"Add extra filetypes
let g:deoplete#sources#ternjs#filetypes = [
                \ 'jsx',
                \ 'javascript.jsx',
                \ 'vue',
                \ 'javascript',
				\ 'js'
                \ ]
'''

[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'
hook_source = '''
	let g:rustfmt_autosave = 1
'''

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
hook_source = '''
	let g:go_fmt_autosave = 1
'''

[[plugins]]
repo = 'dag/vim-fish'
on_ft = 'fish'


