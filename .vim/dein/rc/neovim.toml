[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = 'has("python3")'
on_event = "InsertEnter"
depends = 'context_filetype.vim'
hook_source = '''
	let g:deoplete#enable_at_startup = 1
	let g:deoplete#enable_ignore_case = 1
	let g:deoplete#enable_smart_case = 1
'''

[[plugins]]
repo = 'padawan-php/deoplete-padawan'
depends = ['deoplete.nvim']
on_ft = 'php'
hook_source = '''
	let g:deoplete#sources#padawan#add_parentheses=1
	let g:deoplete#skip_chars = ['$']
'''
hook_post_source = '''
	call deoplete#sources#padawan#StartServer()
	setlocal sw=4 sts=4 ts=4 et
	command! PadawanStart call deoplete#sources#padawan#StartServer()
	command! PadawanStop call deoplete#sources#padawan#StopServer()
	command! PadawanRestart call deoplete#sources#padawan#RestartServer()
	command! PadawanInstall call deoplete#sources#padawan#InstallServer()
	command! PadawanUpdate call deoplete#sources#padawan#UpdatePadawan()
	command! -bang PadawanGenerate call deoplete#sources#padawan#Generate(<bang>0)
'''
hook_post_update = '''
	call deoplete#sources#padawan#InstallServer()
'''
hook_done_update = '''
	call deoplete#sources#padawan#UpdateServer()
'''

[[plugins]]
repo = 'zchee/deoplete-clang'
depends = ['deoplete.nvim']
on_ft = ['c', 'cpp']
hook_source = '''
	let g:deoplete#sources#clang#libclang_path = '/Library/Developer/CommandLineTools/usr/lib/libclang.dylib'
	let g:deoplete#sources#clang#clang_header = '/usr/local/Cellar/llvm/5.0.0/include/clang'
'''

[[plugins]]
repo = 'sebastianmarkow/deoplete-rust'
depends = ['deoplete.nvim']
on_ft = 'rust'
hook_source = '''
	let g:deoplete#sources#rust#racer_binary='$HOME/.cargo/bin/racer'
	let g:deoplete#sources#rust#rust_source_path='$HOME/rust-src/rust/src'
	let g:deoplete#sources#rust#show_duplicates=1
'''

[[plugins]]
repo = 'zchee/deoplete-go'
build = 'make'
on_ft = 'go'
depends = ['deoplete.nvim']
hook_source = '''
    let g:deoplete#sources#go#gocode_binary = $GOPATH . '/bin/gocode'
	let g:deoplete#sources#go#sort_class = ['package', 'func', 'type', 'var', 'const']
'''

[[plugins]]
repo = 'shougo/neco-vim'
depends = ['deoplete.nvim']
on_ft = 'vim'

[[plugins]]
repo = 'fszymanski/deoplete-emoji'
depends = ['deoplete.nvim']
on_ft = ['text', 'markdown']

[[plugins]]
repo = 'ponko2/deoplete-fish'
depends = ['deoplete.nvim', 'vim-fish']
on_ft = 'fish'

[[plugins]]
repo = 'slashmili/alchemist.vim'
on_ft = 'elixir'
depends = ['vim-elixir', 'deoplete.nvim']

[[plugins]]
repo = 'Shougo/defx.nvim'
depends = 'defx-git'
hook_add = '''
	:command! Tree Defx -split=vertical -winwidth=50 -direction=topleft -columns=git:mark:filename:type `expand('%:p:h')` -search=`expand('%:p')`
'''
hook_source = '''
	autocmd FileType defx call s:defx_my_settings()
	function! s:defx_my_settings() abort
	  " Define mappings
	  nnoremap <silent><buffer><expr> <CR>
	  \ defx#do_action('open')
	  nnoremap <silent><buffer><expr> c
	  \ defx#do_action('copy')
	  nnoremap <silent><buffer><expr> m
	  \ defx#do_action('move')
	  nnoremap <silent><buffer><expr> p
	  \ defx#do_action('paste')
	  nnoremap <silent><buffer><expr> l
	  \ defx#do_action('open')
	  nnoremap <silent><buffer><expr> E
	  \ defx#do_action('open', 'vsplit')
	  nnoremap <silent><buffer><expr> P
	  \ defx#do_action('open', 'pedit')
	  nnoremap <silent><buffer><expr> K
	  \ defx#do_action('new_directory')
	  nnoremap <silent><buffer><expr> N
	  \ defx#do_action('new_file')
	  nnoremap <silent><buffer><expr> d
	  \ defx#do_action('remove')
	  nnoremap <silent><buffer><expr> r
	  \ defx#do_action('rename')
	  nnoremap <silent><buffer><expr> x
	  \ defx#do_action('execute_system')
	  nnoremap <silent><buffer><expr> yy
	  \ defx#do_action('yank_path')
	  nnoremap <silent><buffer><expr> .
	  \ defx#do_action('toggle_ignored_files')
	  nnoremap <silent><buffer><expr> h
	  \ defx#do_action('cd', ['..'])
	  nnoremap <silent><buffer><expr> ~
	  \ defx#do_action('cd')
	  nnoremap <silent><buffer><expr> q
	  \ defx#do_action('quit')
	  nnoremap <silent><buffer><expr> <Space>
	  \ defx#do_action('toggle_select') . 'j'
	  nnoremap <silent><buffer><expr> *
	  \ defx#do_action('toggle_select_all')
	  nnoremap <silent><buffer><expr> j
	  \ line('.') == line('$') ? 'gg' : 'j'
	  nnoremap <silent><buffer><expr> k
	  \ line('.') == 1 ? 'G' : 'k'
	  nnoremap <silent><buffer><expr> <C-l>
	  \ defx#do_action('redraw')
	  nnoremap <silent><buffer><expr> <C-g>
	  \ defx#do_action('print')
	  nnoremap <silent><buffer><expr> cd
	  \ defx#do_action('change_vim_cwd')
	endfunction
'''

[[plugins]]
repo = 'kristijanhusak/defx-git'
depends = 'defx.nvim'
